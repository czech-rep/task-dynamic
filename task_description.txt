Recruitment task description
The goal is to build a simple backend for a table builder app, where the user can build tables
dynamically. The app has the following endpoints:

Request     type        Endpoint Action
POST        /api/table  Generate dynamic Django model based on user
                        provided fields types and titles. The field type can be
                        a string, number, or Boolean. HINT: you can use
                        Python type function to generate models on the fly
                        and the schema editor to make schema changes just
                        like the migrations
PUT         /api/table/:id  This endpoint allows the user to update the structure
                            of dynamically generated model.
POST        /api/table/:id/row      Allows the user to add rows to the dynamically
                                    generated model while respecting the model schema
GET         /api/table/:id/rows         Get all the rows in the dynamically generated model

Requirements:
- You must build this app with Django.
- All API calls should be handled by the Django REST framework.
- You must use Postgres as DB backend.
- Write clean and Organized code.
- Nice to have docker and docker-compose to put all inside containers
- Nice to have swagger or redoc
- Nice to have tests

You will be judge on:
- Code quality
- Organization and structure
- Following best practices on handling APIs
- Error handling

After completing the task push your code to a GitHub repository and
provide a link to it.
